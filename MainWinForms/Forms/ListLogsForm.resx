<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bsLogs.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonNewLog.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAA8JJREFUeF7t
        m0mL1UAURnvhhIrDQnGhO0dwITggqL/B4a+ouFI34rASxK3Tz3BqHLcuFJx2gi5VHFARHL4TcvFRpF9V
        5d2XdGIOHOhKV25V3SSVqve6ZwYG3FgqT8qX8qf804Lv5Hm5SDbKWvlEVnWqDc/JxmDwzyQNc/WtE22w
        X9I2d0IjrJFPJY2+kOvKn9tKADTWftXg4b9IwFyDh94nYNzgodcJiA0eepuAlMFDLxOQOnjoXQJY4dki
        h/c97/1x9C4BLG8JyCInNvgDkrpvi1I7uCeAW96CpnpWtoX1wY2cjQ1XnsE3vhkZwfrihnvAKTMkoNSN
        IQGlXWFIQKkbQwJK5+KxtDp1fSiNqnijv49h57gRC0jnrE5dH0ijKt7o72PYOW64B5wyQwJK3YgF9JgD
        QnOe+RCL4UYsoMccEJrzzIdYDDfcA06ZIQGlbgwJKO0KjSdgGm8Bs87bwM51IxZwGm8Bs87bwM51wz3g
        lBkSUOpGLKDXHDDJ6m8Ui+dGLKDXHDDJ6m8Ui+eGe8AJ2SJPyDuS7yy+yu+Svwq5JXubgF3yrrT+xJyV
        ++TEWMC2WCgvy9+SfryXV+RByd2wrJSfD8mr8oOkLudckktkbdpMwGrJlaT9b/KMXCFjrJR8Q8U5nMv8
        knJeJW0lgCtvg+crt50yFx4bziXGI1nrK7u2EsBtb4Nfz4GacK4lgZjZtJEArhzPL7dw7MqzDomtIXZL
        3hTE3MuBHNpIgM32PPMxUvvHn9BS715RyiC1AS+YzWmP2Z7JLEZq/1ZJezts40AqqQ14wSKH9njVpZDT
        v2uSuqeKUiI5DXhwW9Ie7/kUcvp3WFL3ZlFKJKcBD15L2ttYlOLk9M8erzdFKZGwgapZ1/PYF0l7y4vS
        P6hnfUk1bIuYHOftkowFM8IyeB77LCmHCWAwVjfVcIfJapDjn4pSIhbMCMvgeeyVpLy5KMWpijkXWyV1
        2UUmEzbAlQgz63nMJkE2NimE/RvHEUndeT0JHpe0x64uhZz+3ZDUPVqUEuGDBk7i31GagFuf9li0eC+E
        PkrqbuJAKvwDkjXStCl/cWp1Y1yQ1Mu6/YEtJEmwO6FJ2cCwMRpH1bwSskcS65fcwYEuwCc5JGHS7fAG
        aRfvIge6wmJ5X1oS2NLmwpW3wfOB6QLZKZgEub3tceBRZDKLQR2e+R/SBp9y3ryEO2H0Q1HeDuzq2Niw
        sGHFiPzMsevSZnueeW77zl35KviI2z4jTJGr3pkJL4ft8rRkgDzfPBpsoJ5LXnHHZOJOcmbmLwye8tJy
        ycoPAAAAAElFTkSuQmCC
</value>
  </data>
</root>